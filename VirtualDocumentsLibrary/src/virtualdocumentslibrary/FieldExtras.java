/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package virtualdocumentslibrary;

import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

/**
 *
 * @author giovannirojas
 */
public class FieldExtras extends javax.swing.JFrame {
     private static String status = "tipo documental";
     
    // Variables para poder Borrar 
    private boolean borrar = false;
    private boolean entro = false;
    private boolean erase = false;
    private int codigoToDelete;
    private String nombreToDelete;
    private String errorQuery;
    private int row=-1;
    // Fin de las variables de borrar 
    public FieldExtras() {
        initComponents();
        //Set the icon of the app. 
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagenes/iconApp.png"))); 
        this.setTitle("Virtual Archive");
        this.labelPanel.setBackground(ConfigClass.getColorApp());
        this.panelName.setBackground(ConfigClass.getColorApp());
        
        labelType.setText("Tipo Documental");
        refreshTable(status);
        toDelete(); // Inicialemente prepara para borrar. 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public static void refreshTable (String sts){
        
        // Load Data of table Usuarios
        tableMain.setModel(new ResultSetTableModel(sts));
        
    }
    private void toDelete(){
        
        erase = true;
        
        if (status.equalsIgnoreCase("tipo documental"))
            errorQuery="DELETE FROM tipo_documental WHERE idTipo_Documental =";
        
        else if (status.equalsIgnoreCase("local"))
            errorQuery="DELETE FROM local WHERE idlocal =";
        
        else if (status.equalsIgnoreCase("area"))
            errorQuery="DELETE FROM area WHERE idarea =";
        
        else if (status.equalsIgnoreCase("estanteria"))
            errorQuery="DELETE FROM estanteria WHERE idestanteria =";
        
        else if (status.equalsIgnoreCase("ambiente"))
            errorQuery="DELETE FROM ambiente WHERE idambiente =";
        
        
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelPanel = new javax.swing.JPanel();
        labelName = new javax.swing.JLabel();
        nuevoBoton = new javax.swing.JButton();
        tableContainer = new javax.swing.JScrollPane();
        tableMain = new javax.swing.JTable();
        trashLabel = new javax.swing.JLabel();
        panelName = new javax.swing.JPanel();
        labelType = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        labelPanel.setBackground(new java.awt.Color(255, 102, 0));

        labelName.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelName.setText("Campos Predeterminados");

        org.jdesktop.layout.GroupLayout labelPanelLayout = new org.jdesktop.layout.GroupLayout(labelPanel);
        labelPanel.setLayout(labelPanelLayout);
        labelPanelLayout.setHorizontalGroup(
            labelPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(labelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(labelName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 398, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        labelPanelLayout.setVerticalGroup(
            labelPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(labelPanelLayout.createSequentialGroup()
                .add(23, 23, 23)
                .add(labelName)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        nuevoBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1316277158_filenew.png"))); // NOI18N
        nuevoBoton.setText("Nuevo");
        nuevoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBotonActionPerformed(evt);
            }
        });

        tableMain.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableMain.getTableHeader().setReorderingAllowed(false);
        tableMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableMainMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableMainMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMainMouseClicked(evt);
            }
        });
        tableMain.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tableMainMouseDragged(evt);
            }
        });
        tableContainer.setViewportView(tableMain);

        trashLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/empty.png"))); // NOI18N
        trashLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trashLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                trashLabelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                trashLabelMouseEntered(evt);
            }
        });

        panelName.setBackground(new java.awt.Color(255, 102, 0));

        labelType.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        labelType.setText("Nombre de Filtro");

        org.jdesktop.layout.GroupLayout panelNameLayout = new org.jdesktop.layout.GroupLayout(panelName);
        panelName.setLayout(panelNameLayout);
        panelNameLayout.setHorizontalGroup(
            panelNameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelNameLayout.createSequentialGroup()
                .addContainerGap()
                .add(labelType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 248, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelNameLayout.setVerticalGroup(
            panelNameLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, panelNameLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(labelType)
                .addContainerGap())
        );

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/tipoDocumental.png"))); // NOI18N
        jLabel1.setText("Tipo Documental");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/local.png"))); // NOI18N
        jLabel2.setText("Local");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/area.png"))); // NOI18N
        jLabel3.setText("√Årea");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ambiente.png"))); // NOI18N
        jLabel4.setText("Ambiente");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/estanteria.png"))); // NOI18N
        jLabel5.setText("Estanter√≠a");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(labelPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(15, 15, 15)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(jLabel1)
                                .add(33, 33, 33))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(nuevoBoton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18))))
                    .add(layout.createSequentialGroup()
                        .add(41, 41, 41)
                        .add(trashLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(tableContainer)
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .add(37, 37, 37)
                        .add(jLabel3)
                        .add(42, 42, 42)
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel5))
                    .add(panelName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(17, 17, 17))
        );

        layout.linkSize(new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(labelPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(nuevoBoton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(panelName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, trashLabel)
                    .add(tableContainer))
                .add(29, 29, 29)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel1)
                    .add(jLabel2)
                    .add(jLabel3)
                    .add(jLabel4)
                    .add(jLabel5))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5}, org.jdesktop.layout.GroupLayout.VERTICAL);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void trashLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trashLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_trashLabelMouseClicked

    private void trashLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trashLabelMouseExited
        if (erase){
            entro= false;
            
            trashLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/empty.png")));
            
        }
    }//GEN-LAST:event_trashLabelMouseExited

    private void trashLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trashLabelMouseEntered
        if (erase){
            if(borrar == true){
                entro = true;
                trashLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/full.png")));
            }
        }
    }//GEN-LAST:event_trashLabelMouseEntered

    private void nuevoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBotonActionPerformed
        // Termina el proceso que se repetira siempre que den click

            NewField va = new NewField(status);
            va.setLocationRelativeTo(null);
            va.setVisible(true);

        
        
    }//GEN-LAST:event_nuevoBotonActionPerformed

    private void tableMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMainMousePressed

        if (erase);

        {

            row = tableMain.rowAtPoint(evt.getPoint());

            borrar=true;

            // accion qee va hacer siempre
            if (row > -1) {

                Object objeto = tableMain.getModel().getValueAt(row, 0);

                String ja = objeto.toString();
                // leo el tipo
                objeto = tableMain.getModel().getValueAt(row, 1);
                nombreToDelete = objeto.toString();

                codigoToDelete=Integer.parseInt(ja);

            }
        }
        
        
    }//GEN-LAST:event_tableMainMousePressed

    private void tableMainMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMainMouseReleased
        this.setCursor(null);
        if (erase){ // si es igual a true
            // accion del release
            
            if (codigoToDelete ==1){
               
               if (!status.equalsIgnoreCase("tipo Documental")){
                    if(borrar == true && entro == true){

                        int messageType = JOptionPane.QUESTION_MESSAGE;
                        String[] options = {"Continuar", "Cancelar"};
                        int code = JOptionPane.showInternalOptionDialog(this.getContentPane(),
                            "¬øDesea realmente borrar a "+nombreToDelete+"?",
                            "Confirmaci√≥n", 1, messageType,
                            null, options, "Cancelar");

                        if(code==0){
                            DataBaseClass.executeQuery(errorQuery+codigoToDelete);
                            // reconfiguro todo

                            refreshTable(status);

                        } else
                        if(code == 1){
                            this.setCursor(null);
                        }
                        borrar = false;
                        entro=false;
                        
                    }
                    
               }
                
            } 
            else {
                
                if(borrar == true && entro == true){

                        int messageType = JOptionPane.QUESTION_MESSAGE;
                        String[] options = {"Continuar", "Cancelar"};
                        int code = JOptionPane.showInternalOptionDialog(this.getContentPane(),
                            "¬øDesea realmente borrar a "+nombreToDelete+"?",
                            "Confirmaci√≥n", 1, messageType,
                            null, options, "Cancelar");

                        if(code==0){
                            DataBaseClass.executeQuery(errorQuery+codigoToDelete);
                            // reconfiguro todo

                            refreshTable(status);

                        } else
                        if(code == 1){
                            this.setCursor(null);
                        }
                        borrar = false;
                        entro=false;
                        
                    }
                
            }
             trashLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/empty.png")));
             borrar = false;
             this.setCursor(null);
        }
    }//GEN-LAST:event_tableMainMouseReleased

    private void tableMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMainMouseClicked
        /* Esta parte la puedo generalizar
        * ya que se repite varias veces
        */
        int num = -1;  // Inicializo la variables // Como siempre estara en la primera columna el codigo entonces siempre num sera el codigo del cual yo estoy apachando
        int fila = tableMain.rowAtPoint(evt.getPoint());
        if (fila > -1)
        {

            Object ob = tableMain.getModel().getValueAt(fila, 0);
            num  = Integer.parseInt(ob.toString());
            
            editItem(num);
        }
        

        
    }//GEN-LAST:event_tableMainMouseClicked
    private void editItem (int num){
        
        // Termina el proceso que se repetira siempre que den click

        

            NewField va = new NewField(num,status);
            va.setLocationRelativeTo(null);
            va.setVisible(true);

        
        
    }
    private void tableMainMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMainMouseDragged
        
        if (erase){
            
            if(borrar == true && entro == false){

                Toolkit tk = Toolkit.getDefaultToolkit();
                Image imagen = tk.getImage(getClass().getResource("/Imagenes/basura.png"));
                Point hotSpot = new Point(0,0);
                Cursor cursor = tk.createCustomCursor(imagen, hotSpot, "Basura");
                this.setCursor(cursor);

            }        // TODO add your handling code here:
        }
    }//GEN-LAST:event_tableMainMouseDragged

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        status = "tipo documental";
        labelType.setText("Tipo Documental");
        toDelete(); // se prepara para borrar 
        
        // show table and name 
        panelName.setVisible(true);
        tableMain.setVisible(true);
        refreshTable(status);
                
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
         status = "local";
        labelType.setText("Local");
        toDelete(); // se prepara para borrar 
        
         // show table and name 
        panelName.setVisible(true);
        tableMain.setVisible(true);
        refreshTable(status);
                
                
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
         status = "area";
        labelType.setText("√Årea");
        toDelete(); // se prepara para borrar 
        
         // show table and name 
        panelName.setVisible(true);
        tableMain.setVisible(true);
        refreshTable(status);
                
                
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        status = "ambiente";
        labelType.setText("Ambiente");
        toDelete(); // se prepara para borrar
        
         // show table and name 
        panelName.setVisible(true);
        tableMain.setVisible(true);
        refreshTable(status);
                
                
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        status = "estanteria";
        labelType.setText("Estanter√≠a");
        toDelete(); // se prepara para borrar 
        
         // show table and name 
        panelName.setVisible(true);
        tableMain.setVisible(true);
        refreshTable(status);
                
                
    }//GEN-LAST:event_jLabel5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FieldExtras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FieldExtras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FieldExtras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FieldExtras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FieldExtras().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel labelName;
    private javax.swing.JPanel labelPanel;
    private javax.swing.JLabel labelType;
    private javax.swing.JButton nuevoBoton;
    private javax.swing.JPanel panelName;
    private javax.swing.JScrollPane tableContainer;
    private static javax.swing.JTable tableMain;
    private javax.swing.JLabel trashLabel;
    // End of variables declaration//GEN-END:variables
}
